// Skript f√∂r att kontrollera om alla n√∂dv√§ndiga verktyg finns installerade
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üîç Kontrollerar utvecklingsmilj√∂n...');

// Kontrollera Node.js-version
const nodeVersion = process.version;
console.log(`Node.js-version: ${nodeVersion}`);
const nodeVersionNum = Number(nodeVersion.match(/^v(\d+)/)[1]);
if (nodeVersionNum < 14) {
  console.error('‚ùå Node.js-version 14 eller senare kr√§vs');
  process.exit(1);
} else {
  console.log('‚úÖ Node.js-version OK');
}

// Kontrollera npm-version
try {
  const npmVersion = execSync('npm --version').toString().trim();
  console.log(`npm-version: ${npmVersion}`);
  const npmVersionNum = Number(npmVersion.split('.')[0]);
  if (npmVersionNum < 6) {
    console.error('‚ùå npm-version 6 eller senare kr√§vs');
    process.exit(1);
  } else {
    console.log('‚úÖ npm-version OK');
  }
} catch (error) {
  console.error('‚ùå Kunde inte kontrollera npm-version');
  process.exit(1);
}

// Kontrollera om webpack √§r installerat
try {
  const webpackVersion = execSync('npx webpack --version').toString().trim();
  console.log(`webpack-version: ${webpackVersion}`);
  console.log('‚úÖ webpack OK');
} catch (error) {
  console.error('‚ùå webpack √§r inte installerat');
  process.exit(1);
}

// Kontrollera om Electron √§r installerat
try {
  const electronVersion = execSync('npx electron --version').toString().trim();
  console.log(`Electron-version: ${electronVersion}`);
  console.log('‚úÖ Electron OK');
} catch (error) {
  console.error('‚ùå Electron √§r inte installerat');
  process.exit(1);
}

// Kontrollera om n√∂dv√§ndiga filer finns
const requiredFiles = [
  'webpack.main.config.js',
  'webpack.renderer.config.js',
  'src/main/main.ts',
  'src/renderer/index.tsx'
];

for (const file of requiredFiles) {
  if (fs.existsSync(path.join(__dirname, file))) {
    console.log(`‚úÖ ${file} finns`);
  } else {
    console.error(`‚ùå ${file} saknas`);
    process.exit(1);
  }
}

console.log('‚úÖ Alla kontroller godk√§nda! Utvecklingsmilj√∂n √§r redo.'); 